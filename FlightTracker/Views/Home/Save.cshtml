
@{
    ViewBag.Title = "Save";
}

<style>
    html, body {
        overflow: hidden;
    }

    body {
        padding: 0;
        margin: 0;
        padding: 0;
        background-color: gainsboro
        /*background-image: url("../../Resources/Images/map.png");*/
    }

    #canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
    }
</style>
<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>

<html>
<body style="background-size:100% 100%; background-attachment:fixed">

    <canvas id="map" width="0" height="0"></canvas>
    <img id="map_pic" src="~/Resources/Images/map.png" alt="world map" hidden="hidden">

    <h2>DATA:</h2>
    <table>
        <tr>
            <td>lng:  </td>
            <td><p type="text" id="lng" size="5"></p></td>
        </tr>
        <tr>
            <td>lat:  </td>
            <td><p type="text" id="lat" size="5"></p></td>
        </tr>
    </table>
</body>
</html>

<script>
    var IntervalTime = @Session["time"] * 1000;
    var PeriodTime = @Session["Period"] * 1000;
    var connected = @Session["connected"];

    if (connected == 0) {
        alert("Not Connected to simulator!");
        throw new Error("Not Connected to simulator!");
    }

    var lastX = null;
    var lastY = null;

    // Calculate how many times should the intervals happen
    var times = Math.floor(PeriodTime / IntervalTime);
    var counter = 0;

    drawLine = (function () {
        $.post( "@Url.Action("SaveData", "HomeController", new { filename = Session["filename"] })").done(function (xml) {
            var xmlDoc = $.parseXML( xml ),
            $xml = $( xmlDoc ),
            lat = $xml.find("lat").text();
            lng = $xml.find("lng").text();

            var map = document.getElementById("map");
            var context = map.getContext("2d");

            var fLongtitude = parseFloat(lng.valueOf());
            var normLon = ((fLongtitude + 180.0) * (window.innerWidth / 360.0));

            var fLantitude = parseFloat(lat.valueOf());
            var normLat = ((fLantitude + 90.0) * (window.innerHeight / 180.0));

            if (lastX == null || lastY == null) {
                drawArcOnCanvas(normLon, normLat, 5, "#f00000");
            } else {

                console.log("Drawing line from ("
                    + (Math.round(lastX * 10) / 10).toString()
                    + ","
                    + (Math.round(lastY * 10) / 10).toString()
                    + ") to ("
                    + (Math.round(normLon * 10) / 10).toString()
                    + ", "
                    + (Math.round(normLat * 10) / 10).toString()
                    + ")");
                context.lineWidth = "10";
                context.strokeStyle = "red";
                context.beginPath();
                context.moveTo((Math.round(lastX * 10) / 10), (Math.round(lastY * 10) / 10));
                context.lineTo((Math.round(normLon * 10) / 10), (Math.round(normLat * 10) / 10));
                context.stroke();
            }
            lastX = normLon;
            lastY = normLat;

            $("#lng").text(lng);
            $("#lat").text(lat);
        });
    });
    if (IntervalTime != 0 && counter < times) {
        setInterval(drawLine, IntervalTime);
        drawLine();
        ++counter;
    } else {
        alert("Didn't get interval!");
        throw new Error("Didn't get interval!");
    }
    
</script>

<script>
    window.onload = function () {
        var map = document.getElementById("map");
        map.width = window.innerWidth;
        map.height = window.innerHeight;
        var context = map.getContext("2d");
        context.translate(0, 0);
        var img = document.getElementById("map_pic");

        context.drawImage(img, 0, 0, img.width, img.height, 0, 0, map.width, map.height);
    };
</script>

<script>
    drawArcOnCanvas = (function (x, y, r, color) {
        var map = document.getElementById("map");
        var context = map.getContext("2d");
        console.log("Trying to draw on: " + x.toString() + "," + y.toString() + " of: " + map.clientWidth.toString() + "," + map.clientHeight.toString());
        context.fillStyle = color;
        context.beginPath();
        context.arc((Math.round(x * 10) / 10), (Math.round(y * 10) / 10), r, 0, 2 * Math.PI);
        context.fill();
    });
</script>
